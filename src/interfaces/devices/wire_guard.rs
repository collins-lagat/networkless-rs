//! # D-Bus interface proxy for: `org.freedesktop.NetworkManager.Device.WireGuard`
//!
//! This code was generated by `zbus-xmlgen` `5.1.0` from D-Bus introspection data.
//! Source: `Interface '/org/freedesktop/NetworkManager/Devices/24' from service 'org.freedesktop.NetworkManager' on system bus`.
//!
//! You may prefer to adapt it, instead of using it verbatim.
//!
//! More information can be found in the [Writing a client proxy] section of the zbus
//! documentation.
//!
//! This type implements the [D-Bus standard interfaces], (`org.freedesktop.DBus.*`) for which the
//! following zbus API can be used:
//!
//! * [`zbus::fdo::PropertiesProxy`]
//! * [`zbus::fdo::IntrospectableProxy`]
//! * [`zbus::fdo::PeerProxy`]
//!
//! Consequently `zbus-xmlgen` did not generate code for the above interfaces.
//!
//! [Writing a client proxy]: https://dbus2.github.io/zbus/client.html
//! [D-Bus standard interfaces]: https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces,
use zbus::proxy;
#[proxy(
    interface = "org.freedesktop.NetworkManager.Device.WireGuard",
    default_service = "org.freedesktop.NetworkManager"
)]
pub trait WireGuard {
    /// FwMark property
    #[zbus(property)]
    fn fw_mark(&self) -> zbus::Result<u32>;

    /// ListenPort property
    #[zbus(property)]
    fn listen_port(&self) -> zbus::Result<u16>;

    /// PublicKey property
    #[zbus(property)]
    fn public_key(&self) -> zbus::Result<Vec<u8>>;
}
